{"version":3,"sources":["components/Navbar.js","components/SimpleCard.js","components/Buttons.js","components/SearchBar.js","components/displays/PlayerDisplay.js","components/displays/GameDisplay.js","components/displays/TeamDisplay.js","components/displays/Display.js","App.js","index.js"],"names":["Navbar","className","href","useStyles","makeStyles","root","minWidth","width","position","left","top","transform","backgroundColor","color","borderStyle","borderColor","bullet","display","margin","title","fontSize","pos","marginBottom","SimpleCard","classes","Card","CardContent","Typography","gutterBottom","variant","component","CardActions","padding","justifyContent","btn","HtmlTooltip","withStyles","theme","tooltip","maxWidth","typography","pxToRem","border","Tooltip","Buttons","props","currentButton","setCurrentButton","console","log","Fragment","Button","onClick","SearchBar","setSearchInput","id","onSubmit","event","preventDefault","target","value","type","placeholder","PlayerDisplay","useState","currentPlayer","setCurrentPlayer","seasonData","setSeasonData","searchInput","useEffect","defaultURL","fetch","then","res","ok","Error","json","data","num","statsCall","catch","err","message","getStats","first_name","last_name","team","full_name","height_feet","height_inches","weight_pounds","season","pts","ast","reb","games_played","min","GameDisplay","TeamDisplay","teams","setTeams","map","tms","conference","division","abbreviation","city","Display","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b294c19.chunk.js","sourcesContent":["const Navbar = () => {\n    return (  \n    <ul>\n    <li ><a className=\"active\" href=\"#about\">NBA LOOKUP</a></li>\n        <li><a href=\"#home\">Home</a></li>\n        <li><a href=\"#news\">About</a></li>\n        <li><a href=\"https://github.com/RajPatel97/NBA-LOOKUP\">Code</a></li>\n        <li className = 'soon'><a href=\"https://github.com/RajPatel97/NBA-LOOKUP\">Simulations Coming Soon!</a></li>\n        \n    </ul>\n    );\n}\n \nexport default Navbar;","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n//conponent is from: https://material-ui.com/components/cards/\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    width:900,\n    position: 'absolute', left: '50%', top: '25%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'rgb(66, 66, 66)',\n    color: 'white',\n    borderStyle:'solid',\n    borderColor:\"#f7aaaa\",\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n    color: 'white',\n  },\n  title: {\n    fontSize: 14,\n    color: 'white',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        <h1>WELCOME TO NBA LOOKUP</h1>\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n        Look up stats and scores of any team and player in NBA History!\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n        <a className = 'link' href=\"https://github.com/RajPatel97/NBA-LOOKUP\">Check Out the Code Here</a>\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n        Created By Raj Patel\n        </Typography>\n      </CardContent>\n      <CardActions>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport {withStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n//conponent is from: https://material-ui.com/components/cards/\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    width:900, \n    position: 'absolute', left: '50%', top: '45%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'rgb(66, 66, 66)',\n    color: 'white',\n    borderStyle:'solid',\n    borderColor:\"#f7aaaa\",\n    padding: '20px',\n    display:'flex',\n    justifyContent: 'center',//centering the buttons \n  },\n  title: {\n    fontSize: 14,\n    color: 'white',\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  btn: {\n    margin: '0 30px',\n    width:250,\n    minWidth: 100,\n  }\n\n});\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\n\n\n\nexport default function Buttons(props) {\n  let currentButton = props.currentButton;\n  let setCurrentButton = props.setCurrentButton;\n  const classes = useStyles();\n\nconst playerClick =()=>{\n    setCurrentButton('player');\n    //console.log(currentButton);\n\n}\n\nconst teamClick =()=>{\n    setCurrentButton('team');\n    //console.log(currentButton);\n\n}\n\nconst gameClick =()=>{\n    setCurrentButton('game');\n    //console.log(currentButton);\n\n}\n\n  return (\n    <Card className={classes.root}>\n    {console.log(currentButton)}\n    <HtmlTooltip\n        title={\n          <React.Fragment>\n            <Typography color=\"inherit\">Look Up a Current or Retired Player</Typography>\n            <em>{\"Click this Box and Enter the Name of the Player in the Search Box. \"}</em>\n            <em>{\"Displays Stats From All Seasons\"}</em>\n          </React.Fragment>\n        }\n      >\n      <Button className={classes.btn} variant=\"contained\" onClick={playerClick} >Player</Button>\n      </HtmlTooltip>\n\n      <HtmlTooltip\n        title={\n          <React.Fragment>\n            <Typography color=\"inherit\">Look Up a Current Team or Any Previous Team in NBA History </Typography>\n            <em>{\"Click this Box and Enter the Name of the team in the Search Box. Enter Name and Year If Searching for a Historical Team\"}</em>\n            <em>{\"Displays Rosters and Season Statistics as well as Outcomes of the Season\"}</em>\n          </React.Fragment>\n        }\n      >\n        <Button className={classes.btn} variant=\"contained\" color=\"primary\" onClick={teamClick} >Team</Button>\n      </HtmlTooltip>\n\n      <HtmlTooltip\n        title={\n          <React.Fragment>\n            <Typography color=\"inherit\">Look Up Any Specific Game in NBA History </Typography>\n            <em>{\"Click this Box and Enter the date of the Game\"}</em>\n            <em>{\"Displays the Scores and Statistics of the Game\"}</em>\n          </React.Fragment>\n        }\n      >\n        <Button className={classes.btn} variant=\"contained\" color=\"secondary\" onClick={gameClick} >Game</Button>\n      </HtmlTooltip>\n    \n    \n      \n    </Card>\n  );\n}\n","const SearchBar = (props) => {\n\n  //const searchInput = props.searchInput; \n  const setSearchInput = props.setSearchInput;\n\n  const handleSubmit = (event)=>{\n    event.preventDefault();\n    setSearchInput(event.target[0].value)\n    //console.log(event.target[0].value)//for dbugging\n  }\n\n  \n\n    return (  \n        <div className=\"search-wrapper\">\n        <form className='form' id='addItemForm' onSubmit ={handleSubmit}>\n        <input\n          type='text'\n          className='input'\n          id='addInput'\n          placeholder='NBA LOOKUP'\n          \n        />\n        <button className='btn'>\n          Search\n        </button>\n      </form>\n        </div>\n    );\n}\n \nexport default SearchBar;","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport {useFeach} from \"../hooks/useFeach\";\n\nconst PlayerDisplay = (props) => {\n    const [currentPlayer, setCurrentPlayer] = useState(null);\n    const [seasonData, setSeasonData] = useState(null);\n    const  searchInput = props.searchInput;\n\n\n    const getStats = (num)=>{\n        let statsCall = `https://www.balldontlie.io/api/v1/season_averages?season=2020&player_ids[]=${num}`\n        fetch(statsCall)\n        .then(res => {\n            if (!res.ok){\n                throw Error(\"Could not get the stats\");\n            }\n            return res.json();\n        })\n        .then(data => {\n            //console.log(data)\n            setSeasonData(data.data[0])\n        })\n        .catch(err=>{\n            console.log(err.message);\n        })\n\n    }\n\n    //grabbing data when searchbox is used\n    useEffect(()=>{\n        const defaultURL =   `https://www.balldontlie.io/api/v1/players?search=${searchInput}`\n        fetch(defaultURL)\n        .then(res => {\n            if (!res.ok){\n                throw Error(\"Could not get the data\");\n            }\n            return res.json();\n        })\n        .then(data => {\n            setCurrentPlayer(data.data[0])\n            getStats(data.data[0].id);\n        })\n        .catch(err=>{\n            console.log(err.message);\n        })\n        \n        \n\n    },[searchInput])//rerendering when there is a new search here \n\n    return ( \n        <div className=\"playerDisplay-wrapper\">\n        {currentPlayer && <h1 className=\"name\">{currentPlayer.first_name +\" \"+ currentPlayer.last_name}</h1>}\n        {currentPlayer && <h2 className=\"team-name\">{currentPlayer.team.full_name}</h2>}{/*have to load this way or error will show on first render and while loading the data */}\n        {currentPlayer && <p>Position: {currentPlayer.position}</p>}\n        {currentPlayer && <p>Height: {currentPlayer.height_feet+\" ft, \"+currentPlayer.height_inches+\" in\"}</p>}\n        {currentPlayer && <p>Weight: {currentPlayer.weight_pounds} lbs</p>}\n        {seasonData && <h3>Stats for the {seasonData.season} season:</h3>}\n        {seasonData && <p>PPG: {seasonData.pts}</p>}\n        {seasonData &&  <p>AST: {seasonData.ast}</p>}\n        {seasonData &&  <p>REB: {seasonData.reb}</p>}\n        {seasonData &&  <p>Games Played: {seasonData.games_played}</p>}\n        {seasonData &&  <p>Minutes per game: {seasonData.min}</p>}\n        \n        </div>\n     );\n}\n \nexport default PlayerDisplay;\n","\n\nconst GameDisplay = (props) => {\n    const searchInput = props.searchInput;\n    \n    return ( \n        <div className=\"gameDisplay-wrapper\">\n        {console.log('gameDisplay')}\n        </div>\n     );\n}\n \nexport default GameDisplay;","import { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst TeamDisplay = (props) => {\n    const searchInput = props.searchInput;\n    const [teams, setTeams] = useState(null)\n\n    useEffect(()=>{\n        let url = 'https://www.balldontlie.io/api/v1/teams'\n        fetch(url)\n        .then(res => {\n            if (!res.ok){\n                throw Error(\"Could now get the data\");\n            }\n            return res.json();\n        })\n        .then(data => {\n            setTeams(data.data);\n        })\n        .catch(err=>{\n            console.log(err.message);\n        })\n\n    },[searchInput])\n    \n    return ( \n        <div className=\"teamDisplay-wrapper\">\n        {console.log(teams)}\n        {teams && teams.map((tms)=>(\n            <div className=\"list-wrapper\" key={tms.id}>\n            <h4 className=\"team-name\">{tms.full_name}</h4>\n            <p>Conference: {tms.conference}</p>\n            <p>Division: {tms.division}</p>\n            <p>Abbreviation: {tms.abbreviation}</p>\n            <p>City: {tms.city}</p>\n\n            </div>\n        ))}\n\n        </div>\n     );\n}\n \nexport default TeamDisplay;","\nimport PlayerDisplay from \"./PlayerDisplay\";\nimport GameDisplay from \"./GameDisplay\";\nimport TeamDisplay from \"./TeamDisplay\";\n\n\nconst Display = (props) => {\n\n    const currentButton = props.currentButton;\n    const searchInput = props.searchInput;\n\n\n    //renders the correct component for the type of data\n    const getDataRender =()=>{\n        if (currentButton === 'player'){\n          return <PlayerDisplay searchInput = {searchInput}/>\n        }\n        else if (currentButton ==='team'){\n          return <TeamDisplay searchInput = {searchInput}/>\n        }\n        else{\n          return <GameDisplay searchInput = {searchInput}/>\n        }\n      }\n\n    return ( \n        <div className=\"display-wrapper\">\n        {getDataRender()}\n\n        </div>\n     );\n\n}\n \nexport default Display;","\nimport Navbar from \"./components/Navbar\";\nimport SimpleCard from \"./components/SimpleCard\";\nimport Buttons from \"./components/Buttons\";\nimport SearchBar from \"./components/SearchBar\";\nimport { useState } from \"react\";\nimport Display from \"./components/displays/Display\";\n\n\nfunction App() {\n\n  const [currentButton, setCurrentButton] = useState('');\n  const [searchInput, setSearchInput] = useState('Kanye');\n\n\n  return (\n    <div className=\"App\">\n    <Navbar/>\n    <SimpleCard/>\n    <Buttons currentButton = {currentButton} setCurrentButton = {setCurrentButton}/>\n    <SearchBar searchInput ={searchInput} setSearchInput={setSearchInput} />\n    <Display currentButton = {currentButton} searchInput ={searchInput}/>\n\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}